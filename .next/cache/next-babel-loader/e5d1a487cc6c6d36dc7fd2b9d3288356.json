{"ast":null,"code":"import { getSession } from \"next-auth/client\";\nimport prisma from \"../../../lib/prisma\"; // POST /api/post\n// Required fields in body: title\n// Optional fields in body: content\n\nexport default async function handle(req, res) {\n  var _session$user;\n\n  const {\n    title,\n    content\n  } = req.body;\n  const session = await getSession({\n    req\n  });\n  console.log(session);\n  const result = await prisma.post.create({\n    data: {\n      title: title,\n      content: content,\n      author: {\n        connect: {\n          email: session === null || session === void 0 ? void 0 : (_session$user = session.user) === null || _session$user === void 0 ? void 0 : _session$user.email\n        }\n      }\n    }\n  });\n  console.log(result);\n  res.json(result);\n}","map":{"version":3,"sources":["C:/Users/owner/Documents/javascript/blogr-nextjs-prisma/pages/api/post/index.ts"],"names":["getSession","prisma","handle","req","res","title","content","body","session","console","log","result","post","create","data","author","connect","email","user","json"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;AACA;AACA;;AACA,eAAe,eAAeC,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAAA;;AAC7C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBH,GAAG,CAACI,IAA/B;AAEA,QAAMC,OAAO,GAAG,MAAMR,UAAU,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAAhC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAMG,MAAM,GAAG,MAAMV,MAAM,CAACW,IAAP,CAAYC,MAAZ,CAAmB;AACtCC,IAAAA,IAAI,EAAE;AACJT,MAAAA,KAAK,EAAEA,KADH;AAEJC,MAAAA,OAAO,EAAEA,OAFL;AAGJS,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAET,OAAF,aAAEA,OAAF,wCAAEA,OAAO,CAAEU,IAAX,kDAAE,cAAeD;AAAxB;AAAX;AAHJ;AADgC,GAAnB,CAArB;AAOAR,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACAP,EAAAA,GAAG,CAACe,IAAJ,CAASR,MAAT;AACD","sourcesContent":["import { getSession } from \"next-auth/client\";\r\nimport prisma from \"../../../lib/prisma\";\r\n\r\n// POST /api/post\r\n// Required fields in body: title\r\n// Optional fields in body: content\r\nexport default async function handle(req, res) {\r\n  const { title, content } = req.body;\r\n\r\n  const session = await getSession({ req });\r\n  console.log(session);\r\n  const result = await prisma.post.create({\r\n    data: {\r\n      title: title,\r\n      content: content,\r\n      author: { connect: { email: session?.user?.email } },\r\n    },\r\n  });\r\n  console.log(result);\r\n  res.json(result);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}